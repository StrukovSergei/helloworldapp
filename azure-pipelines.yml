trigger:
- main

pool:
  name: 'helloworldapp'
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.0.408'

- script: dotnet build /p:Version=$(Build.BuildId) --configuration $(buildConfiguration)
  displayName: 'Build project'

- script: |
    dotnet pack --configuration Release --output $(Build.ArtifactStagingDirectory)/nupkg
  displayName: 'Pack Solution'

# Publish Build Artifacts
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# Generate NuGet package from DLL
- script: |
    dotnet nuget push "$(Build.ArtifactStagingDirectory)/nupkg/*.nupkg" -k $(NuGetApiKey) -s https://api.nuget.org/v3/index.json
  displayName: 'Push NuGet Package'

# Publish NuGet Package to Artifacts
- task: UniversalPackages@0
  inputs:
    command: 'publish'
    publishDirectory: '$(Build.ArtifactStagingDirectory)/nupkg'
    feedsToUsePublish: 'internal'
    vstsFeedPublish: '7174cfa7-09ea-46f4-9901-442b93686692/c20bf3e0-1a36-4a2d-9436-0d50ebb6b4cb'
    vstsFeedPackagePublish: 'helloworldapp'
    versionOption: 'patch'
    packagePublishDescription: 'Publishing artifact'

# Tag the artifact with branch name and version
- script: |
    branchName=$(Build.SourceBranchName)
    version=$(Build.BuildId)
    echo "##vso[build.addbuildtag]$(branchName)_$(version)"
    echo "Version: $(version)"
  displayName: 'Tag and Print Version'